<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<HTML
><HEAD
><TITLE
>Hello World (part 3): 关于__init和__exit宏</TITLE
><META CHARSET="UTF-8"><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.79"><LINK
REL="HOME"
TITLE="The Linux Kernel Module Programming Guide"
HREF="book1.htm"><LINK
REL="UP"
TITLE="Hello World"
HREF="c146.htm"><LINK
REL="PREVIOUS"
TITLE="Hello World (part 2)"
HREF="x241.htm"><LINK
REL="NEXT"
TITLE="Hello World (part 4): 内核模块证书和内核模块文档说明"
HREF="x303.htm"></HEAD
><BODY
CLASS="SECT1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>The Linux Kernel Module Programming Guide</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="x241.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Chapter 2. Hello World</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="x303.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
><A
NAME="AEN269"
>Hello World (part 3): 关于<TT
CLASS="LITERAL"
>__init</TT
>和<TT
CLASS="LITERAL"
>__exit</TT
>宏</A
></H1
><A
NAME="AEN273"
></A
><A
NAME="AEN276"
></A
><A
NAME="AEN279"
></A
><A
NAME="AEN282"
></A
><P
>这里展示了内核2.2以后引入的一个新特性。注意在负责“初始化”和“清理收尾”的函数定义处的变化。宏
	<CODE
CLASS="FUNCTION"
>__init</CODE
>的使用会在初始化完成后丢弃该函数并收回所占内存，如果该模块被编译进内核，而不是动态加载。
	</P
><P
>也有一个宏<CODE
CLASS="FUNCTION"
>__initdata</CODE
>同<CODE
CLASS="FUNCTION"
>__init</CODE
> 类似，只不过对变量有效。</P
><P
>宏<CODE
CLASS="FUNCTION"
>__exit</CODE
>将忽略“清理收尾”的函数如果该模块被编译进内核。同宏
	<CODE
CLASS="FUNCTION"
>__exit</CODE
>一样，对动态加载模块是无效的。这很容易理解。编译进内核的模块
	是没有清理收尾工作的, 而动态加载的却需要自己完成这些工作。</P
><P
>这些宏在头文件<TT
CLASS="FILENAME"
>linux/init.h</TT
>定义，用来释放内核占用的内存。
	当你在启动时看到这样的<TT
CLASS="LITERAL"
>Freeing unused kernel memory: 236k freed</TT
>内核输出，上面的
	那些正是内核所释放的。</P
><A
NAME="AEN296"
></A
><DIV
CLASS="EXAMPLE"
><A
NAME="AEN299"
></A
><P
><B
>Example 2-5. hello-3.c</B
></P
><PRE
CLASS="PROGRAMLISTING"
>/*  
 *  hello-3.c - Illustrating the __init, __initdata and __exit macros.
 */
#include &#60;linux/module.h&#62;	/* Needed by all modules */
#include &#60;linux/kernel.h&#62;	/* Needed for KERN_ALERT */
#include &#60;linux/init.h&#62;		/* Needed for the macros */

static int hello3_data __initdata = 3;

static int __init hello_3_init(void)
{
	printk(KERN_INFO "Hello, world %d\n", hello3_data);
	return 0;
}

static void __exit hello_3_exit(void)
{
	printk(KERN_INFO "Goodbye, world 3\n");
}

module_init(hello_3_init);
module_exit(hello_3_exit);</PRE
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="x241.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="book1.htm"
ACCESSKEY="H"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x303.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Hello World (part 2)</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="c146.htm"
ACCESSKEY="U"
>Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Hello World (part 4): 内核模块证书和内核模块文档说明</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>